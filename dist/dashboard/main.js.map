{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/environments/environment.ts","./src/app/auth/auth.interceptor.ts","./src/app/auth/auth-guard.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {path: 'auth/login', component: LoginComponent},\n  {path: 'auth/register', component: RegisterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpErrorResponse, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ){\r\n\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        if(localStorage.getItem('token')) {\r\n            let token = localStorage.getItem('token');\r\n            const authReq = req.clone({\r\n                setHeaders: {\r\n                    Authorization: `${token}`\r\n                }\r\n            });\r\n            return next.handle(authReq)\r\n                .pipe(catchError((error)=>{\r\n                    console.log(error);\r\n                    if(error instanceof HttpErrorResponse) {\r\n                        if(error.status == 401){\r\n                            this.authService.logout();\r\n                            this.router.navigateByUrl('/auth/login');\r\n                        }\r\n                    }\r\n                    return throwError(error);\r\n                }))\r\n        }\r\n        return next.handle(req);\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n    ): Observable<boolean> {\n      return this.authService.isAuthenticated()\n        .pipe(\n          tap((b) =>{\n            if(!b) {\n              this.router.navigateByUrl('/auth/login');\n            }\n          })\n        )\n    }\n\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth/auth.service';\nimport { User } from './auth/user';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'dashboard';\n\n  authenticated$: Observable<boolean>;\n  user$: Observable<User>;\n\n\n  constructor( private authService: AuthService, private router: Router) {\n    this.authenticated$ = this.authService.isAuthenticated();\n    this.user$ = this.authService.getUser();\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigateByUrl('/auth/login');\n  }\n}\n\n","<mat-toolbar color=\"teal\">\n    <mat-toolbar-row>\n    <img src=\"../assets/plug.png\" alt=\"\">\n\n    <ng-container *ngIf=\"!(authenticated$ | async)\">\n        <button mat-button routerLink=\"/auth/login\">\n            <mat-icon>input</mat-icon>\n            &nbsp;Entrar\n            </button>\n        <button mat-button routerLink=\"/auth/register\">\n            <mat-icon>person_add</mat-icon>\n            Registrar\n        </button>\n    </ng-container>\n\n    <ng-container *ngIf=\"(authenticated$ | async) && (user$ | async)\">\n        <button mat-icon-button routerLink=\"/main/dash\">\n            <mat-icon>desktop_windows</mat-icon> Inicio\n        </button>\n\n        <button mat-icon-button routerLink=\"/main/aparelhos\">\n            <mat-icon>home</mat-icon> Cadastros\n        </button>\n\n        <button mat-icon-button routerLink=\"/main/alerts\">\n            <mat-icon>notification_important</mat-icon> Avisos\n        </button>\n        <button mat-icon-button routerLink=\"/main/details\">\n            <mat-icon>auto_graph</mat-icon> Detalhes\n        </button>\n        <button mat-icon-button routerLink=\"/main/tutorials\">\n            <mat-icon>menu_book</mat-icon> Tutoriais\n        </button>\n        <button mat-icon-button class=\"profile\" [matMenuTriggerFor]=\"menu\">\n            <mat-icon>account_circle</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n              <p class=\"username\">Olá {{(user$|async)?.firstname}}!</p>\n\n              <mat-divider></mat-divider>\n            \n            <button mat-menu-item (click)=\"logout()\">\n              <mat-icon>exit_to_app</mat-icon>\n              <span>Logout</span>\n            </button>\n          </mat-menu>\n\n    </ng-container>\n</mat-toolbar-row>\n</mat-toolbar>\n\n<router-outlet></router-outlet>","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSelectModule,\n    MatProgressBarModule\n  ]\n})\nexport class AuthModule { \n\n  static forRoot(): ModuleWithProviders<AuthModule> {\n    return {\n      ngModule: AuthModule,\n        providers: [\n          AuthInterceptor\n        ]\n    }\n  }\n\n }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AuthModule } from './auth/auth.module';\nimport { MainModule } from './main/main.module';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatIconModule,\n    AuthModule,\n    MatMenuModule,\n    MatDividerModule,\n    AuthModule.forRoot(),\n    MatProgressBarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    FlexLayoutModule,\n\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { User } from '../user';\nimport { AuthService } from '../auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  providers: [MatSnackBar]\n})\nexport class RegisterComponent implements OnInit {\n\n  formRegister = this.fb.group({\n      'firstname': ['', [Validators.required]],\n      'lastname': ['', [Validators.required]],\n      'address': ['', [Validators.required]],\n      'city': ['', [Validators.required]],\n      'state': ['', [Validators.required]],\n      'phone': ['', [Validators.required]],\n      'mobilephone': ['', [Validators.required]],\n      'email': ['', [Validators.required, Validators.email]],\n      'password1': ['', [Validators.required, Validators.minLength(6)]],\n      'password2': ['', [Validators.required, Validators.minLength(6)]],\n    }, { validator: this.matchingPasswords});\n\n  states = [\"MG\", \"RS\", \"SC\", \"GO\", \"PR\", \"SP\", \"AC\", \"AL\", \"AP\", \"AM\", \"BA\", \"CE\", \"ES\", \"GO\", \"MT\", \"MS\", \"PA\", \"PB\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RO\", \"RR\", \"SE\",\"TO\", \"DF\"];\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private snackBar: MatSnackBar,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  matchingPasswords(group: FormGroup) {\n    if (group) {\n      const password1 = group.controls['password1'].value;\n      const password2 = group.controls['password2'].value;\n      if (password1 == password2) {\n        return null;\n      }\n    }\n    return {matching: false};\n  }\n\n  onSubmit() {\n    console.log(this.formRegister.value);\n    let u: User = { \n      ...this.formRegister.value, \n      password: this.formRegister.value.password1};\n    this.authService.register(u)\n      .subscribe(\n        (u) => {\n          this.snackBar.open(\n            'Successfuly registered. Use your credentials to sing in',\n            'OK', {duration: 2000});\n          this.router.navigateByUrl('/auth/login');\n        },\n        (err) => {\n          console.error(err);\n          this.snackBar.open(err.error.message,'OK', {duration: 2000});\n        }\n      )\n  }\n\n}\n","<div  fxLayout=\"row\" fxLayoutAlign=\"space-around center\" >\n    <div align=\"center\" fxLayout=\"row\" fxLayoutAlign=\"center center\"  class=\"register-form\">\n  \n      <form role=\"form\" [formGroup]=\"formRegister\" (ngSubmit)=\"onSubmit()\">\n  \n        <mat-card class=\"mat-elevation-z8\" flex=\"80\">\n  \n          <mat-card-title>Registrar-se</mat-card-title>\n  \n          <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                        \n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n              <mat-form-field fxFlex=\"45\">\n                <input matInput type=\"text\" formControlName=\"firstname\" \n                  autocomplete=\"firstname\" placeholder=\"Nome\">\n              </mat-form-field>               \n              <mat-form-field fxFlex=\"45\">\n                <input matInput type=\"text\" formControlName=\"lastname\" \n                  autocomplete=\"lastname\" placeholder=\"Ultimo nome\" >\n              </mat-form-field>               \n            </div>\n  \n            <mat-form-field>\n              <input matInput type=\"text\" formControlName=\"address\" \n                    autocomplete=\"address\" placeholder=\"Endereço\" >\n            </mat-form-field>\n  \n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n              <mat-form-field fxFlex=\"75\"> \n                <input matInput type=\"text\" formControlName=\"city\" \n                  autocomplete=\"citt\" placeholder=\"Cidade\"  >\n              </mat-form-field>\n            \n              <mat-form-field  fxFlex=\"15\">\n                <mat-select matNativeControl placeholder=\"Estado\" formControlName=\"state\">\n                  <mat-option *ngFor=\"let state of states\" [value]=\"state\">\n                    {{state}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>          \n              \n            </div>          \n  \n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n              <mat-form-field fxFlex=\"45\"> \n                <input matInput type=\"text\" formControlName=\"phone\" \n                  autocomplete=\"Phone\" placeholder=\"Telefone\"  >\n              </mat-form-field>\n              <mat-form-field fxFlex=\"45\">               \n                <input matInput type=\"text\" formControlName=\"mobilephone\" \n                  autocomplete=\"mobilephone\" placeholder=\"Telefone celular\"  >\n              </mat-form-field>\n            </div>  \n  \n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n              <mat-form-field fxFlex=\"100\">\n                <input matInput type=\"email\" formControlName=\"email\" \n                  class=\"form-control\" value=\"\" autocomplete=\"email\" placeholder=\"E-mail\" >\n              </mat-form-field>  \n            </div>\n  \n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\">\n  \n              <mat-form-field  fxFlex=\"45\">\n                <input matInput type=\"password\" formControlName=\"password1\" \n                  type=\"password\" autocomplete=\"off\">\n                <mat-placeholder>\n                  <mat-icon>lock</mat-icon> Senha\n                </mat-placeholder>\n              </mat-form-field>\n              <mat-form-field fxFlex=\"45\">\n                <input matInput type=\"password\" formControlName=\"password2\" \n                      class=\"form-control\"  autocomplete=\"off\">\n                <mat-placeholder>\n                  <mat-icon>lock_outline</mat-icon> Confirmar senha\n                </mat-placeholder>\n              </mat-form-field>\n  \n            </div>\n  \n  \n            <div fxLayout=\"row\" fxLayoutAlign=\"end end\" >\n                <button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!formRegister.valid\">\n                  <mat-icon>done</mat-icon>&nbsp;Register\n                </button>\n            </div>\n  \n  \n  \n          </mat-card-content>\n        </mat-card>\n      </form>\n  \n  \n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [MatSnackBar]\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup = this.fb.group({\n    'email': ['', [Validators.required, Validators.email]],\n    'password': ['', [Validators.required, Validators.minLength(6)]]\n  })\n\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    const credentials = this.loginForm.value;\n    this.loading = true;\n    this.authService.login(credentials)\n      .subscribe(\n        user => {\n          console.log(user);\n          this.snackBar.open(\n            'Logado com sucesso. Bem vindo ' + user.firstname + '!', 'Ok', {duration: 2000}\n          );\n          this.router.navigateByUrl('/main/dash');\n          this.loading = false;\n        },\n        err => {\n          console.log(err);\n          this.snackBar.open(\n            'Erro ao logar', 'Ok', {duration: 2000});\n            this.loading = false;\n        }\n      )\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"center\">\n    <div>\n      <form  [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" >\n  \n        <mat-card class=\"login-card mat-elevation-z8\" >\n            <mat-card-title>Entrar</mat-card-title>\n            <mat-card-content fxLayout=\"column\" *ngIf=\"!loading\">\n              <mat-form-field >\n                <input matInput formControlName=\"email\" type=\"email\"\n                    placeholder=\"E-mail\" autocomplete=\"email\" readonly=\"false\">\n              </mat-form-field>\n              <mat-form-field>\n                <input matInput formControlName=\"password\" type=\"password\"  \n                  placeholder=\"Senha\" autocomplete=\"password\">\n              </mat-form-field>\n            </mat-card-content>\n            <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"end center\" >\n              <button mat-button color=\"primary\" type=\"submit\" [disabled]=\"!loginForm.valid\">\n                <mat-icon>check</mat-icon>\n                Login\n              </button>\n            </mat-card-actions>\n\n            <mat-progress-bar *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-bar>\n  \n        </mat-card>\n      </form>\n  \n    </div>\n  </div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of, ReplaySubject } from 'rxjs';\nimport { User } from './user';\nimport { tap, map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  readonly url = 'http://191.252.193.18:3000/auth';\n  //readonly url = 'http://localhost:3000/auth';\n  private subjUser$ = new ReplaySubject<User>(1);\n  private subjLoggedIns$ = new BehaviorSubject<boolean>(false);\n  \n\n  constructor(private http: HttpClient) { }\n\n  register(user: User): Observable<User> {\n    return this.http.post<User>(`${this.url}/register`, user);\n  }\n\n  login(credentials: {email: string, password: string}): Observable<User> {\n    return this.http\n      .post<User>(`${this.url}/login`, credentials)\n      .pipe(\n        tap((u: User) => {\n          localStorage.setItem('token', u.token);\n          localStorage.setItem('id_user', u._id!);\n          this.subjLoggedIns$.next(true);\n          this.subjUser$.next(u)\n        })\n      )\n  }\n  isAuthenticated(): Observable<boolean> {\n    const token = localStorage.getItem('token');\n    if(token && !this.subjLoggedIns$.value){\n      return this.checkTokenValidation();\n    }\n    return this.subjLoggedIns$.asObservable();\n  }\n\n  checkTokenValidation(): Observable<boolean> {\n    return this.http.get<User>(`${this.url}/user`)\n    .pipe(\n      tap((u: User) => {\n        localStorage.setItem('token', u.token);\n        this.subjLoggedIns$.next(true);\n        this.subjUser$.next(u);\n      }),\n      map((u: User) => (u)?true:false),\n      catchError((err) => {\n        this.logout();\n        return of(false)\n      })\n    );\n  }\n\n  getUser(): Observable<User> {\n    return this.subjUser$.asObservable();\n  }\n\n  logout(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('id_user');\n    this.subjLoggedIns$.next(false);\n    this.subjUser$.next();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth-guard.service';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'main/dash'},\n  { path: 'main', loadChildren:  './main/main.module#MainModule', canActivate: [ AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./main/main.module\": [\n\t\t\"XpXM\",\n\t\t\"main-main-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"zn8P\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":"webpack:///"}